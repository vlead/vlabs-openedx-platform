#+TITLE: Set up development environment
#+AUTHOR: VLEAD
#+DATE: [2017-12-26 Tue]
#+SETUPFILE: ./org-templates/level-0.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This has document to setup the openedx platform version
  =ginkgo= in development environment
  
* Provision the Openedx platform
  Following are the steps to provision the openedx platform
  running =ginkgo= version.
  
  1. Download the vagrant box running Openedx ginkgo version [[http://files.vlabs.ac.in/downloads/vagrant-boxes/vagrant-images_ginkgo-fullstack-2017-08-14.box][link]]
  2. Add the box to vagrant
     #+BEGIN_EXAMPLE
     vagrant box add openedx-ginkgo openedx-ginkgo-fullstack-vagrant.box
     #+END_EXAMPLE
  3. Create a directory =openedx-ginkgo= and run "vagrant init"
     #+BEGIN_EXAMPLE
     mkdir openedx-ginkgo
     cd openedx-ginkgo
     vagrant init openedx-ginkgo
     #+END_EXAMPLE
  4. Above step(3) generates =Vagrantfile=
  5. Edit the =Vagrantfile= using editor (like e.g emacs,
     vim, etc.) and uncomment below line by removing =#= in
     the beginning of the line to set the vagrant to use
     private network (e.g 192.168.33.22)
     #+BEGIN_EXAMPLE
     #config.vm.network "private_network", ip: "192.168.33.10" 
     config.vm.network "private_network", ip: "192.168.33.22" 
     #+END_EXAMPLE
  6. Boot the machine
     #+BEGIN_EXAMPLE
     vagrant up 
     #+END_EXAMPLE
  7. Login in to the machine as root.  Sometimes, login will
     succeed after a few tries. 
     #+BEGIN_EXAMPLE
     vagrant ssh 
     sudo su -
     #+END_EXAMPLE
  8. Export =http_proxy= and =https_proxy= variables if your
     network behind the =http_proxy=
     #+BEGIN_EXAMPLE
     export http_proxy="http://proxy.iiit.ac.in:8080"
     export https_proxy="http://proxy.iiit.ac.in:8080"
     #+END_EXAMPLE
  9. Configure post message, following code snippet is to be
     configured in =openedx= server. This is required to
     send the post messages to destination server. Place the
     following snippet inside
     =/edx/var/nginx/server-static/message.html=
     #+BEGIN_SRC html
     <html>
      <head>
        <script>
          var postM = function() {
          textOfContentIframe = document.body.innerText;
          console.log("Sender message: " + textOfContentIframe);
          //console.log("Referrer: " + document.referrer);
          msg = window.parent.postMessage(textOfContentIframe, "http://pages.vlabs.ac.in");
          };
        </script>
      </head>
      <body onload="postM();">
      </body>
     </html>
     #+END_SRC
     In above code snippet =http://pages.vlabs.ac.in= is the
     destination server name where all post messages will be
     sent.
  10. Edit the file =/etc/nginx/sites-enabled/lms= and add
      the below code snippet
      #+BEGIN_EXAMPLE
       location @proxy_to_lms_app {
          add_after_body /server/message.html;
          -------
          --------
      #+END_EXAMPLE
  11. Configure x-frame options, by default =x-frame= http
      response header of pages served from OpenEdx are set
      to =DENY= for security reasons. To enable loading all
      these pages inside iframes this is to be set to
      =ALLOW=.  To enable this feature change
      =x_frame_option= value from =DENY= to =ALLOW= in
      =/edx/app/edxapp/edx-platform/common/djangoapps/third_party_auth/decorators.py=
      #+BEGIN_EXAMPLE
      #x_frame_option = 'DENY'
      x_frame_option = 'ALLOW'
      #+END_EXAMPLE
  12. Delete header and footer pages, to disable =header= and
      =footer= pages from openedx comment out below lines
      from file
      =/edx/app/edxapp/edx-platform/lms/templates/main.html=
      #+BEGIN_EXAMPLE
      ##<%static:optional_include_mako file="body-initial.html" is_theming_enabled="True" />
      ## % if not disable_header:
      ##   <%include file="${static.get_template_path('header.html')}" args="online_help_token=online_help_token" />
      ## <%include file="/preview_menu.html" />
      ##% endif

      ##  % if not disable_footer:
      ##    <%include file="${static.get_template_path('footer.html')}" />
      ##% endif
      #+END_EXAMPLE
  13. Restart the services on Open edX to pick the new
      configuration changes.
      #+BEGIN_EXAMPLE
      /edx/bin/supervisorctl restart edxapp:
      #+END_EXAMPLE
  14. Exit from the VM and reload the vagrant machine
      #+BEGIN_EXAMPLE
      exit
      #+END_EXAMPLE
      #+BEGIN_EXAMPLE
      vagrat reload
      #+END_EXAMPLE
  15. Access the =lms= of openedx platform
      #+BEGIN_EXAMPLE
      firefox <ip_address>
      #+END_EXAMPLE

* Restore the backup
  Following are the steps to restore the backup which was
  taken from the running instance of openedx platform
  =ginkgo= version

  1. Clone the repository
     #+BEGIN_EXAMPLE
     sudo su -
     git clone https://github.com/vlead/vlabs-openedx-platform
     #+END_EXAMPLE
  2. Change directory to =vlabs-openedx-platform= and
     checkout branch to =develop=
     #+BEGIN_EXAMPLE
     cd vlabs-openedx-platform
     git checkout develop
     #+END_EXAMPLE
  3. Install emacs
     #+BEGIN_EXAMPLE
     apt-get update -y
     apt-get install emacs -y
     #+END_EXAMPLE
  4. Build the sources
     #+BEGIN_EXAMPLE
     make
     #+END_EXAMPLE
  5. Change directory to =scripts= folder
     #+BEGIN_EXAMPLE
     cd build/code/scripts
     #+END_EXAMPLE
  6. Get the Openedx platform =ginkgo= backup file
     #+BEGIN_EXAMPLE
     wget http://files.vlabs.ac.in/downloads/edx-ginkgo-backups/openedx-ginkgo-with-90-courses.tar
     #+END_EXAMPLE
  7. Set execute permission to =restore-same-version= and the
     the script by passing the argument as backup tar file
     in =.tar= file
     #+BEGIN_EXAMPLE
     chmod +x restore-same-version
     #./restore-same-version <tar-file-name>.tar
     ./restore-same-version openedx-ginkgo-with-90-courses.tar
     #+END_EXAMPLE

* Migrate users database of openedx =dogwood= to openedx 
     
** Dump dogwood user database into mysql database
   Following are the steps to dump the user database of
   Openedx =dogwood= into mysql database

  1. Get the user database backup of Openedx platform
     running =dogwood= version
     #+BEGIN_EXAMPLE
     wget http://files.vlabs.ac.in/downloads/edx-dogwood-backups/openedx-dogwood-user-db-19-12-2017.sql
     #+END_EXAMPLE
     - Note ::
               Make sure that above user database backup is
               up to date

  2. Log into the database
     #+BEGIN_EXAMPLE
     mysql -u root
     #+END_EXAMPLE
  3. Create a database with name =dogwood=
     #+BEGIN_EXAMPLE
     mysql> create database dogwood;
     #+END_EXAMPLE
  4. Exit from the mysql server
     #+BEGIN_EXAMPLE
     > exit
     #+END_EXAMPLE
  5. Import sql file into =dogwood= database
     #+BEGIN_EXAMPLE
     mysql -u root dogwood < <file-name>.sql
     #+END_EXAMPLE

** Steps to run migration script
   Following are the steps to migrate the user database from
   Openedx =dogwood= to =ginkgo= version

    1. Changed directory to =scripts= folder
       #+BEGIN_EXAMPLE
       cd build/code/scripts
       #+END_EXAMPLE
    2. Configure the variables =HOST= , =USER= and
       =PASSWORD= of mysql server in =config.py= file
       #+BEGIN_EXAMPLE
       HOST="localhost"
       USER="root"
       PASSWORD=""
       SRC_DB = "dogwood"
       DEST_DB = "edxapp"

       #+END_EXAMPLE
    3. Set the execution permission to =restore= and run it
       #+BEGIN_EXAMPLE
       chmod +x restore
       ./restore
       #+END_EXAMPLE
    4. If step(6) is successful delete the =dogwood= database
       #+BEGIN_EXAMPLE
       mysql > drop database dogwood;
       #+END_EXAMPLE

  
